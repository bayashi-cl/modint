# flake8:noqa:E704
from __future__ import annotations

class ModInt:
    def __init__(self, value: int, mod: int) -> None: ...
    @property
    def value(self) -> int: ...
    @property
    def mod(self) -> int: ...
    def inv(self) -> ModInt: ...
    def __add__(self, rhs: int | ModInt) -> ModInt: ...
    def __radd__(self, rhs: int) -> ModInt: ...
    def __iadd__(self, rhs: int | ModInt) -> ModInt: ...
    def __sub__(self, rhs: int | ModInt) -> ModInt: ...
    def __rsub__(self, rhs: int) -> ModInt: ...
    def __isub__(self, rhs: int | ModInt) -> ModInt: ...
    def __mul__(self, rhs: int | ModInt) -> ModInt: ...
    def __rmul__(self, rhs: int) -> ModInt: ...
    def __imul__(self, rhs: int | ModInt) -> ModInt: ...
    def __pow__(self, rhs: int | ModInt, mod: int) -> ModInt: ...
    def __neg__(self) -> ModInt: ...
    def __pos__(self) -> ModInt: ...
    def __bool__(self) -> bool: ...
    def __int__(self) -> int: ...
    def __floordiv__(self, rhs: int | ModInt) -> ModInt: ...
    def __rfloordiv__(self, rhs: int) -> ModInt: ...
    def __ifloordiv__(self, rhs: int | ModInt) -> ModInt: ...

class UsingModInt:
    def __init__(self, mod: int) -> None: ...
    @property
    def mod(self) -> int: ...
    def __call__(self, value: int = 0) -> ModInt: ...
